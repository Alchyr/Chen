package Chen.Powers;

import Chen.Abstracts.Power;
import com.megacrit.cardcrawl.actions.common.ApplyPowerAction;
import com.megacrit.cardcrawl.cards.DamageInfo;
import com.megacrit.cardcrawl.core.AbstractCreature;
import com.megacrit.cardcrawl.dungeons.AbstractDungeon;
import com.megacrit.cardcrawl.powers.VulnerablePower;

public class ExploitPower extends Power {
    public static final String NAME = "Exploit";
    public static final PowerType TYPE = PowerType.BUFF;
    public static final boolean TURN_BASED = false;

    public ExploitPower(final AbstractCreature owner, final int amount) {
        super(NAME, TYPE, TURN_BASED, owner, null, amount);
    }

    @Override
    public void onAttack(DamageInfo info, int damageAmount, AbstractCreature target) {
        if (target.hasPower(Disoriented.POWER_ID) && target.getPower(Disoriented.POWER_ID).amount > 0)
        {
            AbstractDungeon.actionManager.addToTop(new ApplyPowerAction(target, this.owner, new VulnerablePower(target, this.amount, !this.owner.isPlayer), this.amount));
        }
    }

    @Override
    public void updateDescription() {
        this.description = descriptions[0] + "#b" + this.amount + descriptions[1];
    }
}